// 1.0.4 Hawk.js | Copyright (c) 2013 Matthew Parke | (MIT LICENSE) hawkjs.org/#license
var Hawk=function(){function DoesNotExistException(className){this.value=className;this.message="definition does not exist.";this.toString=function(){return this.value+" "+this.message}}function NumberTypeError(value){this.value=value;this.message="must be a number.";this.toString=function(){return this.value+" "+this.message}}function ObjectTypeError(value){this.value=value;this.message="must be an object.";this.toString=function(){return this.value+" "+this.message}}function IndexOutOfBoundsException(index){this.value=index;this.message="is out of bounds.";this.toString=function(){return this.value+" "+this.message}}var cKm={DoesNotExistException:DoesNotExistException,NumberTypeError:NumberTypeError,ObjectTypeError:ObjectTypeError,IndexOutOfBoundsException:IndexOutOfBoundsException,classMap:{},mixinMap:{},proxy:function(fn,scope){return function(){args=Array.prototype.slice.call(arguments);fn.apply(scope,args)}},extend:function(destination,source){for(var index in source){if(source.hasOwnProperty(index)){destination[index]=source[index]}}},getDef:function(className){var def=this.classMap[className];if(typeof def==="object"){return def}else{throw new DoesNotExistException(className)}},getDefs:function(classNames){var classDefs=[],len=classNames.length,className;for(var i=0;i<len;i++){className=classNames[i];def=this.getDef(className);classDefs.push(def)}return classDefs},getMixinDef:function(className){return this.mixinMap[className]},mix:function(classMixinDef,mixinNames){var constructor=function(){},mixinName,mixinDef,len;classMixinDef.sprout.call(constructor.prototype,classMixinDef.config);if(mixinNames){len=mixinNames.length;for(var i=0;i<len;i++){mixinName=mixinNames[i];mixinDef=this.getMixinDef(mixinName);mixinDef.sprout.call(constructor.prototype,mixinDef.config)}}return constructor},createMixinConstructor:function(){var me=this;return function(config){me.extend(this,config);return this}},createMixin:function(className,config,initFn){var Sprout=this.createMixinConstructor();this.mixinMap[className]={sprout:Sprout,initFn:initFn,config:config};return this.mixinMap[className]},getInitQueue:function(mixinNames){var initQueue=[],mixinDef,initFn,len;if(mixinNames){len=mixinNames.length;for(var i=0;i<len;i++){mixinDef=this.getMixinDef(mixinNames[i]);initFn=mixinDef.initFn;if(initFn){initQueue.unshift(initFn)}}}return initQueue},addClassDef:function(className,sprout,initQueue){this.classMap[className]={sprout:sprout,initQueue:initQueue}},executeInitQueue:function(inBloom,initQueue){var len=initQueue.length,i=len-1;while(i>=0){initFn=initQueue[i];initFn.call(inBloom);--i}},def:function(className,config){var initFn=config["init"],mixinNames=config["mixins"],classMixinDef,mixedConstructor,initQueue;delete config["init"];initQueue=this.getInitQueue(mixinNames);if(initFn){initQueue.unshift(initFn)}classMixinDef=this.createMixin(className,config,initFn);mixedConstructor=this.mix(classMixinDef,mixinNames);this.addClassDef(className,mixedConstructor,initQueue)},gen:function(className,overrideConfig){var classDef=this.getDef(className),sprout=classDef.sprout,initQueue=classDef.initQueue,inBloom;overrideConfig=overrideConfig||{};inBloom=new sprout;this.extend(inBloom,overrideConfig);this.executeInitQueue(inBloom,initQueue);return inBloom}};return cKm}();Hawk.def("Record",{dirty:false,id:null,data:null,dataIndex:null,init:function(){if(this.data===null){this.data={}}},setId:function(id){if(typeof id==="number"){this.id=id}else{throw new Hawk.NumberTypeError(id)}},getId:function(){return this.id},setData:function(data){if(typeof data==="object"){this.data=data}else{throw new Hawk.ObjectTypeError(data)}},getData:function(){return this.data},setDataIndex:function(dataIndex){if(typeof dataIndex==="number"){this.dataIndex=dataIndex}else{throw new Hawk.NumberTypeError(dataIndex)}},getDataIndex:function(){return this.dataIndex},get:function(key){return this.data[key]},set:function(key,value){this.data[key]=value;this.dirty=true},isDirty:function(){return this.dirty}});Hawk.def("Cache",{store:null,recCounter:0,idCounter:0,init:function(){this.store=[]},load:function(dataArr){var len=dataArr.length;for(var i=0;i<len;i++){this.add(dataArr[i])}},size:function(){return this.recCounter},add:function(data){var record=Hawk.gen("Record",{id:this.idCounter,data:data});this.store.push(record);++this.idCounter;++this.recCounter},remove:function(record){var index=this.indexOf(record);if(index!==-1){return this.removeAt(index)}else{return null}},removeAt:function(index){var record=this.getAt(index);if(record!==null){this.store.splice(index,1);--this.recCounter}return record},removeAll:function(){this.recCounter=0;this.idCounter=0;return this.store.splice(0,this.store.length)},indexOf:function(record){var len=this.store.length,i=0,found=false,comparison,index=-1;while(i<len&&!found){comparison=this.store[i];if(comparison.getId()===record.getId()){index=i;found=true}++i}return index},getAt:function(index){if(index>=0&&index<this.recCounter){return this.store[index]}else{return null}},getRecords:function(){return this.store},find:function(key,value){var len=this.store.length,i=0,found=false,rec=null;while(i<len&&!found){rec=this.store[i];if(rec.get(key)===value){found=true}++i}return rec},getDirty:function(){var dirtyRecords=[],len=this.store.length,rec;for(var i=0;i<len;i++){rec=this.store[i];if(rec.isDirty()){dirtyRecords.push(rec)}}return dirtyRecords}});Hawk.def("Node",{id:null,data:null,next:null,prev:null,setId:function(id){if(typeof id==="number"){this.id=id}else{throw new Hawk.NumberTypeError(id)}},getId:function(){return this.id},setData:function(data){this.data=data},getData:function(){return this.data}});Hawk.def("LinkedList",{init:function(){this.start=Hawk.gen("Node",{id:null,data:null});this.end=Hawk.gen("Node",{id:null,data:null});this.start.next=this.end;this.start.prev=null;this.end.prev=this.start;this.end.next=null;this.idCounter=0;this.numNodes=0},add:function(data){this.addLast(data)},addLast:function(data){var node=Hawk.gen("Node",{id:this.idCounter,data:data});last=this.end;this.insertBefore(last,node);++this.idCounter;++this.numNodes},insertBefore:function(toInsertBefore,node){node.next=toInsertBefore;node.prev=toInsertBefore.prev;toInsertBefore.prev.next=node;toInsertBefore.prev=node},getFirst:function(){if(this.numNodes===0){return null}else{return this.start.next}},getLast:function(){if(this.numNodes===0){return null}else{return this.end.prev}},getFromFirst:function(index){var count=0,temp=this.start.next;if(index>=0){while(count<index&&temp!==null){temp=temp.next;++count}}else{temp=null}if(temp===null){throw new Hawk.IndexOutOfBoundsException(index)}return temp},getAt:function(index){var count=0,temp=null;if(index===0){temp=this.getFirst()}else if(index===this.numNodes-1){temp=this.getLast()}else{temp=this.getFromFirst(index)}return temp},size:function(){return this.numNodes},remove:function(node){node.prev.next=node.next;node.next.prev=node.prev;--this.numNodes;return node},removeFirst:function(){var temp=null;if(this.numNodes>0){temp=this.remove(this.start.next)}return temp},removeLast:function(){var temp=null;if(this.numNodes>0){temp=this.remove(this.end.prev)}return temp},removeAll:function(){this.start.next=this.end;this.end.prev=this.start;this.numNodes=0}});Hawk.def("Observable",{init:function(){this.events={};this.on=this.addListener;this.off=this.removeListener;this.fire=this.fireEvent},addEvent:function(eventName){this.events[eventName]=null},addEvents:function(eventNames){var len=eventNames.length;for(var i=0;i<len;i++){this.addEvent(eventNames[i])}},addListener:function(eventName,callback,scope){var eventMapping=this.events[eventName],proxy;if(eventMapping===null){proxy=Hawk.proxy(callback,scope);this.events[eventName]=proxy}},removeListener:function(eventName){var eventMapping=this.events[eventName];if(eventMapping!==null&&eventMapping!==undefined){this.events[eventName]=null}},fireEvent:function(){var args=Array.prototype.slice.call(arguments),eventName=args.shift(),eventMapping=this.events[eventName];if(typeof eventMapping==="function"){eventMapping.apply(this,args)}}});Hawk.def("PubSub",{init:function(){this.subscriptions={};this.sub=this.registerSubscription;this.subs=this.registerSubscriptions;this.pub=this.publishEvent;this.mapping=this.registerEventMappings},registerSubscription:function(eventName,callback,scope){var proxy=Hawk.proxy(callback,scope);if(!Array.isArray(this.subscriptions[eventName])){this.subscriptions[eventName]=[]}this.subscriptions[eventName].push(proxy)},registerSubscriptions:function(events,scope){var len=events.length,evt,eventName,callback;for(var i=0;i<len;i++){evt=events[i];eventName=evt.eventName;callback=evt.callback;this.registerSubscription(eventName,callback,scope)}},publishEvent:function(){var args=Array.prototype.slice.call(arguments),eventName=args.shift(),subArr=this.subscriptions[eventName],subCallback,len;if(Array.isArray(subArr)){len=subArr.length;for(var i=0;i<len;i++){subCallback=subArr[i];subCallback.apply(this,args)}}},genPublishCallback:function(reactions){return function(){var len=reactions.length,reaction,args;for(var j=0;j<len;j++){reaction=reactions[j];args=reaction.useArgs?Array.prototype.slice.call(arguments):[];args.unshift(reaction.eventName);this.publishEvent.apply(this,args)}}},registerEventMappings:function(maps){var len=maps.length,events=[],eventName,reactions,reactionLen;for(var i=0;i<len;i++){eventName=maps[i].eventName;reactions=maps[i].reactions;events.push({eventName:eventName,callback:this.genPublishCallback(reactions)})}this.registerSubscriptions(events,this)}});